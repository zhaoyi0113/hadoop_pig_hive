d
ggplot(data=d, aes(x=date, y=DongSi)) + geom_point()
d$date
ggplot(data=d, aes(x=date, y=DongSi, group=type)) + geom_point()
y <- queryDataForYear('2016', 'PM2.5', 'DAY')
y$Date
ggplot(data=y, aes(x=Date, y=DongSi, group=type)) + geom_point()
ggplot(data=y, aes(x=Date, y=DongSi, group=type)) + geom_line()
y$type
colnames(y)
ggplot(data=y, aes(x=Date, y=DongSi, group=Date)) + geom_line()
ggplot(data=y, aes(x=TianTan, y=DongSi, group=Date)) + geom_line()
ggplot(data=y, aes(x=TianTan, y=DongSi, group=1)) + geom_line()
ggplot(data=y, aes(x=TianTan, y=DongSi, group=type)) + geom_line()
ggplot(data=y, aes(x=TianTan, y=DongSi, group=Date)) + geom_line()
ggplot(data=y, aes(x=TianTan, y=DongSi, group=Date)) + geom_line() + geom_point()
dat1 <- data.frame(
sex = factor(c("Female","Female","Male","Male")),
time = factor(c("Lunch","Dinner","Lunch","Dinner"), levels=c("Lunch","Dinner")),
total_bill = c(13.53, 16.81, 16.24, 17.42)
)
dat1
ggplot(data=dat1, aes(x=time, y=total_bill, group=sex)) +
geom_line() +
geom_point()
source('data_analyst.R')
y <- queryDataForYear('2016', 'PM2.5', 'DAY')
a <- y[c('Date', 'DongSi')]
b <- y[c('Date', 'TongZhou')]
c <- y[c('Date', 'YanQing')]
colnames(a) <- c('Date', 'V')
colnames(b) <- c('Date', 'V')
colnames(c) <- c('Date', 'V')
ggplot() + geom_line(data = a, aes(x=Date, y=V), col='blue') +geom_line(data = b, aes(x=Date, y=V), col='yellow') + geom_point(data = c, aes(x=Date, y=V), col='red')
ggplot() + geom_line(data = a, aes(x=Date, y=V, group=1), col='blue')
ggplot() + geom_lien(data = y, aes(x=Date, y=DongSi, group=1))
ggplot() + geom_line(data = y, aes(x=Date, y=DongSi, group=1))
names(y)
ggplot() + geom_line(data = y, aes(x=Type, y=DongSi, group=1))
ggplot() + geom_line(data = y, aes(x=type, y=DongSi, group=1))
ggplot() + geom_line(data = y, aes(x=type, y=DongSi, group=Date))
ggplot() + geom_line(data = y, aes(x=Date, y=DongSi))
ggplot() + geom_line(data = y, aes(x=Date, y=DongSi, group=1))
ggplot() + geom_line(data = y, aes(x=Date, y=DongSi, group=ShunYi))
names(cachedData)
cachedData[1]
names(cachedData[1])
names(cachedData[[1]])
for(k in names(cachedData[[1]])){print(k)}
results <- list()
results['O3'] <- queryDateForYear('2016', 'O3', 'DAY')
results['O3'] <- queryDataForYear('2016', 'O3', 'DAY')
names(results)
colnames(results)
nrow(results)
length(results)
types(results)
typeof(results)
source('data_analyst.R')
ds <- querySiteDate('DongSi')
source('data_analyst.R')
ds <- querySiteDate('DongSi')
ds
names(ds)
ds['AQI']
ggplot() + geom_line(data = ds['AQI'], aes(x=Date, y=DongSi))
names(ds)
names(ds['AQI'])
ds['AQI']
ds['AQI',]
ds[['AQI']]
y <- queryDateForYear()
y <- queryDataForYear
y <- queryDataForYear()
names(y)
y['DongSi']
y['Date', 'DongSi']
y[c('Date', 'DongSi')]
results <- data.frame(stringsAsFactors = FALSE)
colnames(results)
length(colnames(results))
cbind(results, d[y('Date', 'DongSi')])
cbind(results, y[c('Date', 'DongSi')])
help(cbind)
merge(results, y[c('Date', 'DongSi')])
results[,Date] <- y['Date']
results[,Date] <- y[,Date]
y[,Date]
y[,'Date']
results[,'Date'] <- y[,'Date']
results$Date <- y$Date
results <- y[c('Date', 'DongSi')]
restuls
results
r <- cbind(results, y['DongSi'])
r
names(r)
colnames(r)
colnames(r) < c('Date', 'A', 'Y')
colnames(r)
colnames(r) <- c('Date', 'A', 'Y')
colnames(r)
names(y)
y['DongSi']
source('date_analyst.r')
source('date_analyst.R')
source('date_analyst.r
')
source('data_analyst.r')
d<-querySiteDate('DongSi')
d <- queryDataForYear('2016', 'AQI', 'MONTH')
results <- d[c('Date', 'DongSi')]
colnames(results) <- c('Date', 'AQI')
colnames(results)
head(results)
d <- queryDataForYear('2016', 'PM2.5', 'MONTH')
restuls <- cbind(restuls, d['DongSi'])
results <- cbind(results, d['DongSi'])
head(results)
colnames(results) <- c(colnames(results), 'PM2.5')
a <- c(colnames(results))
a
a <- c(colnames(results), 'PM2.5')
a
results
colnames(results) <- c(colnames(results)[1: length(colnames(results))], 'PM2.5')
colnames(results) <- c(colnames(results)[1: length(colnames(results))-1], 'PM2.5')
source('data_analyst.R')
d <- querySiteDate('DongSi')
d
head(d)
ggplot() + geom_line(data=d, aes(x=Date, y=PM2.5))
ggplot() + geom_line(data=d, aes(x=Date, y=PM2.5, group=1))
ggplot() + geom_line(data=d, aes(x=Date, y=PM2.5, group=1)) + geom_line(data=3, aes(x=Date, y=AQI, group=1))
ggplot() + geom_line(data=d, aes(x=Date, y=PM2.5, group=1)) + geom_line(data=d, aes(x=Date, y=AQI, group=1))
ggplot() + geom_line(data=d, aes(x=Date, y=CO, group=1)) + geom_line(data=d, aes(x=Date, y=AQI, group=1))
ggplot() + geom_line(data=d, aes(x=Date, y=CO, group=1, col='steelblue')) + geom_line(data=d, aes(x=Date, y=AQI, group=1))
ggplot() + geom_line(data=d, aes(x=Date, y=CO, group=1, col='steelblue')) + geom_line(data=d, aes(x=Date, y=AQI, group=1, col='red'))
ggplot() + geom_line(data=d, aes(x=Date, y=CO, group=1, col='blue')) + geom_line(data=d, aes(x=Date, y=AQI, group=1, col='red'))
ggplot() + geom_line(data=d, aes(x=Date, y=CO, group=1, col='blue')) + geom_line(data=d, aes(x=Date, y=AQI, group=1, col='red'))ggplot() + geom_line(data=d, aes(x=Date, y=CO, group=1, col='blue')) + geom_line(data=d, aes(x=Date, y=AQI, group=1, col='red'))
source('data_analyst.R')
nrow(d)
ggplot() + geom_line(data=d, aes(x=Date, y=CO, group=1, col='blue')) + geom_line(data=d, aes(x=Date, y=AQI, group=1, col='red'))
colnames(d)
d <- queryDataForYear('2016', 'DongSi', 'DAY')
colnames(d)
d <- queryDataForYear('2016', 'DongSi', 'MONTH')
d <- queryDataForYear('DongSi', '2016', 'DAY')
d <- queryDataForYear('DongSi', '2016', 'MONTH')
source('data_analyst.R')
source('data_analyst.R')
d <- queryDataForYear('DongSi', '2016', 'DAY')
d <- queryDataForYear('DongSi', '2016', 'MONTH')
d <- querySiteDate('DongSi', '2016', 'MONTH')
ggplot() + geom_line(data=d, aes(x=Date, y=CO, group=1, col='blue')) + geom_line(data=d, aes(x=Date, y=AQI, group=1, col='red'))
g <- ggplot()
gl1 <- geom_line(data=d, aes(x=Date, y=CO, group=1, col='blue'))
g + gl1
colnames(d)
source('data_analyst.R')
names(g)
g
d <- querySiteDate('DongSi', '2016', 'MONTH')
names(d)
colnames(d)
g <- ggplot()
g <- g + geom_line(data = d, aes(x=Date, y='AQI', group=1))
g
d['AQI']
ggplot() + geom_line(data = d, aes(x=Date, y='AQI', group=1))
names(d)
d$AQI
ggplot() + geom_line(data = d, aes(x=Date, y=AQI, group=1))
g <- ggplota()
g <- ggplot()
for(c in colnames(d)[2: length(colnames(d))]){  g <- g + geom_line(data = d, aes(x=Date, y=c, group=1))}
g
c <- 'AQI'
ggplot() + geom_line(data = d, aes(x=Date, y=c, group=1))
ggplot() + geom_line(data = d, aes_string(x='Date', y=c, group=1))
source('data_analyst.R')
g
source('data_analyst.R')
g
source('data_analyst.R')
g
names(d)
source('data_analyst.r')
g
plotData(c('AQI'))
plotData(c('AQI', 'PM2.5', 'PM10','PM10_24h', 'PM2.5_24h'))
source('data_analyst.r')
g
plotData(c('AQI', 'PM2.5', 'PM10','PM10_24h', 'PM2.5_24h'))
plotData(c('AQI', 'PM2.5', 'PM10','PM10_24h', 'PM2.5_24h'))
source('data_analyst.r')
plotData(c('AQI', 'PM2.5', 'PM10','PM10_24h', 'PM2.5_24h'))
names(d)
ggplot() + geom_line(data =d , aes(x=Date, y=AQI))
ggplot() + geom_line(data =d , aes(x=Date, y=AQI, group=1))
ggplot() + geom_line(data =d , aes(x=Date, y=AQI, group=1, col=red))
ggplot() + geom_line(data =d , aes(x=Date, y=AQI, group=1, col='red'))
ggplot() + geom_line(data =d , aes(x=Date, y=AQI, group=1, col='AQI'))
ggplot() + geom_line(data =d , aes(x=Date, y=AQI, group=1, col='AQI'))
ggplot() + geom_line(data =d , aes(x=Date, y=AQI, group=1, col='red'))
ggplot() + geom_line(data =d , aes(x=Date, y=AQI, group=1, col='red')) + geom_dl(aes(label='AQI'))
ggplot() + geom_line(data =d , aes(x=Date, y=AQI, group=1, col='red')) + geom_text(aes(label='AQI'))
d$Date
mean(d$Date)
typeof(d$Date)
mean(d$Date)[1]
mean(d$Date)[[1]]
mean(d$Date)
d$Date[1]
d$Date[2]
3/2
as.integer(3/2)
d$Date[3/2]
d$Date[5/2]
d$Date[2]
ggplot() + geom_line(data =d , aes(x=Date, y=AQI, group=1, col='red')) + geom_text(aes(x='2016-07-01',y=10,  label='AQI'))
mean(d$AQI)
ggplot() + geom_line(data =d , aes(x=Date, y=AQI, group=1, col='red')) + geom_text(aes(x='2016-07-01',y=mean(y$AQI),  label='AQI'))
ggplot() + geom_line(data =d , aes(x=Date, y=AQI, group=1, col='red')) + geom_text(aes(x='2016-07-01',y=mean(d$AQI),  label='AQI'))
ggplot() + geom_line(data =d , aes(x=Date, y=AQI, group=1, col='red')) + geom_text(aes(x='2016-01-01',y=mean(d$AQI),  label='AQI'))
d$AQI[0]
d$AQI[1]
ggplot() + geom_line(data =d , aes(x=Date, y=AQI, group=1, col='red')) + geom_text(aes(x='2016-01-01',y=d$AQI[1],  label='AQI'))
ggplot() + geom_line(data =d , aes(x=Date, y=AQI, group=1, col='red')) + geom_text(aes(x=d$Date[1],y=d$AQI[1],  label='AQI'))
d[['AQI']]
source('data_analyst.r')
plotData(c('AQI', 'PM2.5', 'PM10','PM10_24h', 'PM2.5_24h'))
source('data_analyst.r')
plotData(c('AQI', 'PM2.5', 'PM10','PM10_24h', 'PM2.5_24h'))
plotData(c('AQI'))
plotData(c('AQI', 'PM2.5'))
plotData(c('AQI', 'CO'))
plotData(c('AQI', 'CO', 'PM10'))
source('~/dev/bigdata/pm25/restapi.R', echo=TRUE)
source('~/dev/bigdata/pm25/server.R', echo=TRUE)
source('~/dev/bigdata/pm25/server.R', echo=TRUE)
source('~/dev/bigdata/pm25/server.R', echo=TRUE)
source('~/dev/bigdata/pm25/server.R', echo=TRUE)
source('~/dev/bigdata/pm25/server.R', echo=TRUE)
library(ggplot)
install.packages('ggplot')
install.packages('ggplot2')
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
source('~/dev/bigdata/pm25/server.R', echo=TRUE)
source('~/dev/bigdata/pm25/server.R', echo=TRUE)
source('~/dev/bigdata/pm25/server.R', echo=TRUE)
install.packages('library(rsjon)
in')
install.packages('rsjon')
toJson()
toJSON()
library(jsonlite)
toJSON()
source('~/dev/bigdata/pm25/server.R', echo=TRUE)
source('~/dev/bigdata/pm25/decision_tree_pm25.R', echo=TRUE)
head(siteData)
tree <- rpart(AQI ~ ., siteData, method="class")
fancyRpartPlot(tree)
siteData[is.na(siteData)] <- 0
tree <- rpart(AQI ~ ., siteData, method="class")
fancyRpartPlot(tree)
head(siteData)
help(rpart)
tree <- rpart(AQI ~ SO2, siteData, method="class")
fancyRpartPlot(tree)
head(tree)
fancyRpartPlot(tree)
head(siteData)
names(siteData)
head(siteData$AQI)
siteData$AQI[siteData < 0]
fancyRpartPlot(tree)
tree <- rpart(AQI ~ SO2, siteData, method="class")
tree
head(siteDate[c('AQI, SO2')])
head(siteData[c('AQI, SO2')])
siteData[c('AQI', 'SO2')]
head(siteData[c('AQI', 'SO2')])
a <- siteData[siteData$AQI > 100]
head(a)
nrow(a)
siteData$good <- siteData$AQI > 50
siteData$good
tree <- rpart(good ~ SO2, siteData, method="class", parms=())
tree <- rpart(good ~ SO2, siteData, method="class")
fancyRpartPlot(tree)
siteData <- querySiteDate('DongSi', '2016', 'Month')
siteData[is.na(siteData)] <- 0
siteData$good <- siteData$AQI > 50
tree <- rpart(good ~ SO2, siteData, method="class")
fancyRpartPlot(tree)
siteData$good
tree <- rpart(good ~ ., siteData, method="class")
fancyRpartPlot(tree)
siteData$good[siteData$good] <- 1
siteData$good
tree <- rpart(good ~ ., siteData, method="class")
fancyRpartPlot(tree)
tree
siteData$AQI
siteData[c('AQI','good')]
tree <- rpart(good ~ AQI, siteData, method="class")
fancyRpartPlot(tree)
tree
siteData$good <- siteData$AQI < 50 && siteData$PM2.5 < 50
siteData$good[siteData$good] <- 1
tree <- rpart(good ~ AQI, siteData, method="class")
fancyRpartPlot(tree)
tree <- rpart(good ~ AQI, siteData, method="class")
siteData$good
siteData$AQI
siteData$PM2.5
siteData$good <- siteData$AQI < 30 && siteData$PM2.5 < 30
siteData$good
siteData$good <- siteData$AQI < 30 || siteData$PM2.5 < 30
siteData$good
siteData[c('good', 'AQI', 'PM2.5')]
siteData$good <- (siteData$AQI < 30 || siteData$PM2.5 < 30)
siteData[c('good', 'AQI', 'PM2.5')]
dse <- within(siteData, {good= ifelse(AQI < 30)})
dse <- within(siteData, {good= ifelse(AQI < 30, 1, 0)})
dse
dse <- within(siteData, {good= ifelse(AQI < 50, 1, 0)})
dse$good
names(dse)
dse <- within(siteData, {good = ifelse(AQI<50,1,0)})
tree <- rpart(dse ~ AQI, siteData, method="class")
tree <- rpart(good ~ AQI, dse, method="class")
fancyRpartPlot(tree)
tre
tree
dse <- within(siteData, {good = ifelse(AQI<50 && pm25<50,1,0)})
tree <- rpart(good ~ AQI, dse, method="class")
fancyRpartPlot(tree)
tree
dse$good
dse <- within(siteData, {good = ifelse(AQI<50 || pm25<50,1,0)})
dse <- within(siteData, {good = ifelse(AQI<50 || pm25<50,1,0)})
dse$good
siteData$PM2.5
dse <- within(siteData, {good = ifelse(AQI<50 || PM2.5<50,1,0)})
tree <- rpart(good ~ AQI, dse, method="class")
fancyRpartPlot(tree)
tree
dse$good
dse$good[dse$AQI < 50] <- 1
dse$good
dse$good <- 0
dse$good
dse$good[dse$AQI < 50] <- 1
dse$good
tree <- rpart(good ~ AQI, dse, method="class")
tree
tree <- rpart(good ~ . , dse, method="class")
fancyRpartPlot(tree)
tree
dse
train <- data.frame(s=0, y=1)
train
x <- data.frame('SN' = 1:10, 'Age' = c(11:20))
x
x$SN <- x$SN > 5
x
t <- rpart(Age ~ ., x, method='class')
t
x$Age <- x$Age > 10
x
t <- rpart(Age ~ ., x, method='class')
x$Survived <- c(0,1,1,1,0,1,0,1,0)
x$Survived <- c(0,1,1,1,0,1,0,1,0,1)
x
t <- rpart(Survived ~ ., x, method="class")
t
x <- data.frame(Survived=as.numeric())
x
x <- data.frame(Survived=as.numeric(), pclass=as.numeric(), age=as.numeric())
x
names(x)
x[0] <- c(0,1,1)
x[0] <- list(0,1,1)
x
x$Survived <- c(0,1,1,0,0,0)
x[1,] <- c(0,1,1,0,0,0)
x
x[,1] <- c(0,1,1,0,0,0)
x[1,] <- c(0,2,24)
x[2,] <- c(1,1,16)
x[3,] <- c(1,1,36)
x[4,] <- c(0,2,39)
x
x[5,] <- c(0,2,30)
x[6,] <- c(0,3,30)
x
t <- rpart(Suvivied ~ ., x, method='class')
t <- rpart(Survived ~ ., x, method='class')
t
siteData <- querySiteDate('DongSi', '2016', 'Day')
nrow(siteData)
siteData <- querySiteDate('DongSi', '2016', 'DAY')
nrow(siteData)
dse <- within(siteData, {good = ifelse(AQI<50 || PM2.5<50,1,0)})
dse
dse$good
dse <- within(siteData, {good = ifelse(AQI<50 && PM2.5<50,1,0)})
dse$good
dse <- within(siteData, {good = ifelse(AQI<50 <50,1,0)})
dse <- within(siteData, {good = ifelse(AQI<50,1,0)})
dse$good
siteData[is.na(siteData)] <- 0
dse <- within(siteData, {good = ifelse(AQI<50,1,0)})
dse$good
tree <- rpart(good ~ . , dse, method="class")
tree
fancyRpartPlot(tree)
tree <- rpart(good ~ AQI , dse, method="class")
fancyRpartPlot(tree)
tree <- rpart(good ~ AQI + PM2.5 , dse, method="class")
fancyRpartPlot(tree)
tree <- rpart(good ~  PM2.5 , dse, method="class")
fancyRpartPlot(tree)
tree <- rpart(good ~  PM2.5 + PM10 , dse, method="class")
fancyRpartPlot(tree)
help(predict)
source('~/dev/bigdata/pm25/server.R', echo=TRUE)
siteData <- querySiteDate('DongSi', '2016', 'DAY')
warnings()
head(siteDat)
head(siteData)
nrow(siteData)
siteDataLm <- lm(siteData ~ AqI)
siteDataLm <- lm(siteData ~ AQI)
siteDataLm <- lm(siteData ~ siteData$AQI)
siteDataLm <- lm(siteData$AQI ~ siteData$Date)
head(siteDataLm)
nrow(siteData$Date)
length(siteData$Date)
future_dates <- req(366:375)
future_dates <- seq(366:375)
future_dates <- data.frame(date = 366:375)
nrow(future_dates)
pred <- predict(siteDataLm, future_dates)
names(siteData)
length(names(siteData))
siteData[, 14]
siteData[, 15]
siteData[, 15] <- seq(1:365)
names(siteDAta)
names(siteData)
length(names(siteData))
site_data_lm <- lm(siteData$AQI, siteData$V15)
site_data_lm <- lm(siteData$AQI ~ siteData$V15)
future_dates
pred <- predict(site_data_lm, future_dates)
future_dates
pred <- predict(site_data_lm, future_dates)
future_dates <- data.frame(days = 366:375)
future_dates
site_data_lm
pred <- predict(site_data_lm, future_dates)
pred
nrow(pred)
names(pred)
pred <- predict(site_data_lm, future_dates)
site_data_lm <- lm(siteData$AQI ~ siteData$V15)
pred <- predict(site_data_lm, future_dates)
days <- 1:365
site_data_lm <- lm(siteData$AQI ~ days)
pred <- predict(site_data_lm, future_dates)
pred
plot(siteData ~ days, xlim=(1,365))
plot(siteData ~ days, xlim=c(1,365))
plot(siteData ~ days, xlim=c(1,365))
plot(siteData ~ days
)
head(siteData)
head(days)
length(days)
plot(siteData$AQI ~ days)
points(366:375, pred, col='red')
future_dates
future_dates <- data.frame(days=366:700)
pred <- predict(site_data_lm, future_dates)
points(366:700, pred, color='green')
points(366:700, pred, col='green')
pred
pred
pred <- predict(site_data_lm, future_dates)
length(pred)
head(pred)
points(366:700, pred, col='yellow')
points(366:700, pred, col="yellow")
points(366:375, pred, col="yellow")
ppoint(siteData ~ days, xlim = c(1:365))
pplot(siteData ~ days, xlim = c(1:365))
plot(siteData ~ days, xlim = c(1:365))
length(days)
plot(siteData ~ days, xlim = c(1,365))
plot(siteData$AQI ~ days, xlim = c(1,365))
points(366:700, pred, col='yellow')
length)pred
length(pred)
library(rpart)
library(rattle)
source('~/dev/bigdata/pm25/server.R', echo=TRUE)
